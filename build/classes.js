// Generated by CoffeeScript 1.9.3
(function() {
  var Classes, D, React, SingleClass, classesList, cx,
    slice = [].slice;

  React = require('react');

  D = React.DOM;

  cx = require('classnames');

  classesList = require('./classesList');

  SingleClass = React.createFactory(React.createClass({
    getInitialState: function() {
      return {
        isOpen: false
      };
    },
    renderLarge: function() {
      return D.div({
        className: 'large'
      }, D.div({
        className: 'large-inner'
      }, D.h3({}, this.props.data.title), D.p({}, this.props.data.desc)), D.p({
        className: 'exit',
        onClick: (function(_this) {
          return function() {
            return _this.switchOpen(false);
          };
        })(this)
      }, D.i({
        className: 'fa fa-close fa-2x'
      })));
    },
    renderSmall: function() {
      return D.div({
        className: 'entry'
      }, D.div({
        className: 'entry-inner'
      }, D.h3({}, this.props.data.title), D.p({}, this.props.data.desc)), D.p({
        className: 'more',
        onClick: (function(_this) {
          return function() {
            return _this.switchOpen(true);
          };
        })(this)
      }, 'More'));
    },
    switchOpen: function(to) {
      return this.setState({
        isOpen: to
      });
    },
    render: function() {
      if (this.state.isOpen) {
        return this.renderLarge();
      } else {
        return this.renderSmall();
      }
    }
  }));

  Classes = React.createClass({
    render: function() {
      var c, i;
      return D.div.apply(D, [{
        className: 'body block-display'
      }].concat(slice.call((function() {
        var j, len, results;
        results = [];
        for (j = 0, len = classesList.length; j < len; j++) {
          c = classesList[j];
          results.push(SingleClass({
            data: c
          }));
        }
        return results;
      })()), slice.call((function() {
        var j, results;
        results = [];
        for (i = j = 1; j <= 3; i = ++j) {
          results.push(D.div({
            className: 'filler'
          }));
        }
        return results;
      })())));
    }
  });

  module.exports = Classes;

}).call(this);
