// Generated by CoffeeScript 1.9.3
(function() {
  var Classes, D, DisplayBlock, DisplayFull, React, classesList, cx,
    slice = [].slice;

  React = require('react');

  D = React.DOM;

  cx = require('classnames');

  classesList = require('./classesList');

  DisplayBlock = React.createFactory(React.createClass({
    render: function() {
      return D.div({
        className: 'entry'
      }, D.div({
        className: 'entry-inner'
      }, D.h3({}, this.props.data.title), D.p({}, this.props.data.desc)), D.p({
        className: 'more',
        onClick: (function(_this) {
          return function() {
            return _this.props.cb(_this.props.id);
          };
        })(this)
      }, 'More'));
    }
  }));

  DisplayFull = React.createFactory(React.createClass({
    getColor: function() {
      var colors;
      colors = ['#54b980', '#5089a5', '#aee86a'];
      return colors[this.props.id % 3];
    },
    render: function() {
      return D.span({
        className: 'large',
        style: {
          backgroundColor: this.getColor()
        }
      }, D.div({
        className: 'large-inner'
      }, D.h3({}, this.props.data.title), D.p({}, this.props.data.desc), D.p({}, 'Taught in ', this.props.data.semester, ' for ', this.props.data.grade, ' grade students.')), D.p({
        className: 'exit',
        onClick: (function(_this) {
          return function() {
            return _this.props.cb(-1);
          };
        })(this)
      }, D.i({
        className: 'fa fa-close fa-2x'
      })));
    }
  }));

  Classes = React.createClass({
    getInitialState: function() {
      return {
        openID: -1
      };
    },
    setOpenID: function(id) {
      return this.setState({
        openID: id
      });
    },
    render: function() {
      var i;
      return D.div.apply(D, [{
        className: 'body block-display'
      }].concat(slice.call((function() {
        var j, ref, results;
        results = [];
        for (i = j = 0, ref = classesList.length - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
          results.push(this.state.openID === i ? [
            DisplayBlock({
              id: i,
              data: classesList[i],
              cb: this.setOpenID
            }), DisplayFull({
              id: this.state.openID,
              data: classesList[this.state.openID],
              cb: this.setOpenID
            })
          ] : [
            DisplayBlock({
              id: i,
              data: classesList[i],
              cb: this.setOpenID
            })
          ]);
        }
        return results;
      }).call(this)), slice.call((function() {
        var j, results;
        results = [];
        for (i = j = 1; j <= 3; i = ++j) {
          results.push(D.div({
            className: 'filler'
          }));
        }
        return results;
      })())));
    }
  });

  module.exports = Classes;

}).call(this);
